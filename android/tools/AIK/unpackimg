#!/bin/bash

banner()
{
cat <<'EOF' 
   _     _____                                 _     _
  /_\    \_   \/\ /\     _ __ ___   __ _  __ _(_)___| | __
 //_\\    / /\/ //_/____| '_ ` _ \ / _` |/ _` | / __| |/ /
/  _  \/\/ /_/ __ \_____| | | | | | (_| | (_| | \__ \   < 
\_/ \_/\____/\/  \/     |_| |_| |_|\__,_|\__, |_|___/_|\_\
                                         |___/ by fossfrog
twitter/git: shubhamvis98

EOF
}

chkarch()
{
    arch=`uname -m`

    if [[ "$arch" == "arm"* || "$arch" == "aarch"* ]]; then
        MAGISKBOOT='magiskboot_arm'
    elif [[ "$arch" == "x86_64" ]]; then
        MAGISKBOOT='magiskboot_x86'
    else
        echo "[!]Unknown architecture"
        exit
    fi
}

usage()
{
    echo -e "Usage:"
    echo -e "\t./unpackimg <android_boot.img>\t#unpack boot.img"
    echo -e "\t./repackimg\t\t\t#repack new-boot.img"
    echo -e "\t./cleanup\t\t\t#clean workspace\n"
}

chkrdtype() {
    file="$1"
    file_type=$(file -b "$file" | tr '[:upper:]' '[:lower:]')

    if [[ $file_type == *"gzip"* ]]; then
        echo 'gzip'
    elif [[ $file_type == *"xz"* ]]; then
        echo 'xz'
    elif [[ $file_type == *"zst"* ]]; then
        echo 'zst'
    elif [[ $file_type == *"cpio"* ]]; then
        echo 'cpio'
    else
        echo 'Unknown'
    fi
}

chkarch
banner

RPWD=`pwd`

if [ "$1" == "help" ]
then
    usage
    exit 0
elif [ -f "$1" ]
then
    ./cleanup
    IMG=`realpath $1`
else
    echo -e '[!]Input Error\n'
    usage
    exit 1
fi

mkdir -p $RPWD/split $RPWD/ramdisk
cat $IMG > $RPWD/split/source.img
cd $RPWD/split

$MAGISKBOOT unpack -h $IMG

RDTYPE=`chkrdtype $RPWD/split/ramdisk.cpio | tee $RPWD/split/ramdisk_compression`

if [[ "$RDTYPE" == 'zst' ]]; then
    mv $RPWD/split/ramdisk.cpio $RPWD/split/ramdisk.cpio.zst
    zstd -d $RPWD/split/ramdisk.cpio.zst
    rm $RPWD/split/ramdisk.cpio.zst
elif [[ "$RDTYPE" == 'gzip' ]]; then
    mv $RPWD/split/ramdisk.cpio $RPWD/split/ramdisk.cpio.gz
    gzip -d $RPWD/split/ramdisk.cpio.gz
elif [[ "$RDTYPE" == 'xz' ]]; then
    mv $RPWD/split/ramdisk.cpio $RPWD/split/ramdisk.cpio.xz
    xz -d $RPWD/split/ramdisk.cpio.xz
fi

cd $RPWD/ramdisk
cpio -i < $RPWD/split/ramdisk.cpio
